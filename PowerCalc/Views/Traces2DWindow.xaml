<Window x:Class="TAlex.PowerCalc.Views.Traces2DWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:talex="http://schemas.talex-soft.com/2010/xaml/presentation"
        xmlns:behaviours="clr-namespace:TAlex.PowerCalc.Behaviours"
        xmlns:convs="clr-namespace:TAlex.PowerCalc.Converters"
        DataContext="{Binding Source={StaticResource viewModelLocator}, Path=Traces2DViewModel}"
        Background="{DynamicResource GradBrush}"
        Title="{Binding State.WindowCaption}" Height="270" Width="600" WindowStartupLocation="CenterOwner" ResizeMode="NoResize" ShowInTaskbar="False"
        FocusManager.FocusedElement="{Binding ElementName=expressionTextBox}">
    <Window.Resources>
        <talex:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <talex:IsNotNullToBooleanConverter x:Key="IsNotNullToBooleanConverter" />
        <convs:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <convs:Trace2DVisibleToOpacityConverter x:Key="Trace2DVisibleToOpacityConverter" />
    </Window.Resources>

    <Window.Style>
        <Style>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CloseSignal}" Value="true">
                    <Setter Property="behaviours:WindowCloseBehavior.Close" Value="true" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="35" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0">
            <Expander Grid.Column="1" DockPanel.Dock="Left" ExpandDirection="Left" Margin="-1,-1,0,-1"
                      Visibility="{Binding State.ShowTraceList, Converter={StaticResource BooleanToVisibilityConverter}}" IsExpanded="True">

                <ListBox Name="TracesList" Width="150" SelectedIndex="0" SelectionMode="Single" ItemsSource="{Binding Traces}" Background="{DynamicResource prefTabControlBgBrush}"
                         SelectionChanged="TracesList_SelectionChanged">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Display" IsCheckable="True" IsChecked="{Binding Display}" />
                                        <Separator />
                                        <MenuItem Header="Delete" Command="{Binding PlacementTarget.Tag.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" CommandParameter="{Binding}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Opacity="{Binding Display, Converter={StaticResource Trace2DVisibleToOpacityConverter}}">                                                               
                                <Rectangle Fill="{Binding Color}" Width="10" Height="10" />
                                <TextBlock Text="{Binding Expression}" Margin="5,0,0,0" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add" Command="{Binding AddCommand}" />
                            <MenuItem Header="Delete All" Command="{Binding DeleteAllCommand}" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
            </Expander>

            <Border Padding="25,10" DataContext="{Binding Path=SelectedItem, ElementName=TracesList}"
                    IsEnabled="{Binding Converter={StaticResource IsNotNullToBooleanConverter}}"
                    CornerRadius="4" BorderThickness="1"
                    BorderBrush="{DynamicResource SecondaryBrush}"
                    Background="{DynamicResource prefTabControlBgBrush}">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>

                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Height" Value="23" />
                        </Style>

                        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </Grid.Resources>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="95" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBlock Text="F(x):" />
                    <TextBox Name="expressionTextBox" Grid.Column="1" Text="{Binding Expression, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                             ContextMenu="{StaticResource MainContextMenu}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding DataContext.SaveCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                        </TextBox.InputBindings>
                    </TextBox>

                    <TextBlock Grid.Row="1" Text="Lower Bound:" />
                    <TextBox Grid.Row="1" Grid.Column="1" Width="80" HorizontalAlignment="Left" Text="{Binding LowerBound, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=IsChecked, ElementName=LowerBoundUnlimited, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Name="LowerBoundUnlimited" Content="Negative Infinity" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="100,0,0,0" IsChecked="{Binding IsLowerBoundUnlimited}" />
                    
                    <TextBlock Grid.Row="2" Text="Upper Bound:" />
                    <TextBox Grid.Row="2" Grid.Column="1" Width="80" HorizontalAlignment="Left" Text="{Binding UpperBound, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=IsChecked, ElementName=UpperBoundUnlimited, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Name="UpperBoundUnlimited" Content="Positive Infinity" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Margin="100,0,0,0" IsChecked="{Binding IsUpperBoundUnlimited}" />

                    <CheckBox Grid.Row="3" Content="Display" IsChecked="{Binding Display}" />

                    <talex:ColorChip Grid.Row="4" SelectedColor="{Binding Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Foreground" Margin="-2,0,0,0" />
                    
                    <Slider Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center" Width="140" Grid.Column="1" IsSnapToTickEnabled="True" Minimum="0.5" Maximum="5" SmallChange="0.5" TickFrequency="0.5" TickPlacement="TopLeft" Value="{Binding LineThickness}" />
                    <TextBlock Grid.Row="4" Grid.Column="1" Margin="145,0,0,0" Text="{Binding LineThickness, StringFormat=Line Thickness: {0:F1}}" />
                </Grid>
            </Border>
        </DockPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Height="25">
            <Button MinWidth="80" Margin="0,0,8,0" Content="{Binding State.SaveButtonCaption}" Command="{Binding SaveCommand}" />
            <Button MinWidth="80" Content="_Cancel" IsCancel="True" />
        </StackPanel>
        
    </Grid>
</Window>
